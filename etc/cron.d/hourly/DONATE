#!/usr/bin/php
<?php

include('miner.inc.php');
include('settings.inc.php');

$update = simplexml_load_file("https://raw.github.com/MineForeman/MinePeon-Updates/master/update.xml");
$bra = (string)$update->branch;
$upd = (string)$update->version;
$upf = str_replace("\n", '', file_get_contents('/opt/minepeon/etc/version'));
if ($upd != $upf && $upd != ""){
$settings['update'] = "true";
$settings['updatebranch'] = $bra;
writeSettings($settings);
}else{
$settings['update'] = "false";
$settings['updatebranch'] = "null";
$settings['donateTime']=12;
writeSettings($settings);
}

if (!empty($settings['donateTime']) || $settings['donateTime'] != ""){
 $dTime = $settings['donateTime'];
}else{
 $dTime = 12;
}

if(empty($settings['donateEnable']) || !$settings['donateEnable']){
        exit;
}

if (date('G') <> $dTime) {
        exit;
} 
sleep(rand(1,1200)); //astuce for all donator don't support in same time
/*
$poolAddress = 'stratum+tcp://stratum.btcguild.com:3333';
$poolUser = 'MinePeon_Donate';
$poolPass = 'MinePeon_Donate';
*/
//New Donate repartition system by Voxdemonix
$poolAddress=''; $poolUser=''; $poolPass='';
$xml = simplexml_load_file('/opt/minepeon/http/xml/settingsContrib.xml');
$guy=strval($xml->contribLastSupport);
$plop=0;
if(strval($xml->contribForceSupport)=='0'){
	//Support all contributor (one peer day)
	foreach($xml->contribList as $val){
        	$drop=0; $antibuffer=0;
        	while($plop==0){
        	        foreach($val as $guy=>$v){
        	                if ($drop){ $plop=1;
        	                $poolAddress=strval($xml->contribList->$guy->pool);
        	                $poolUser=strval($xml->contribList->$guy->worker);
        	                $poolPass=strval($xml->contribList->$guy->pass); if($poolPass=="0"){ $poolPass ='x';}
        	                $xml->contribLastSupport=strval($guy);
        	                $xml->asXml('/opt/minepeon/http/xml/settingsContrib.xml');
        	                break;}
        	                if (strval($xml->contribLastSupport)==strval($guy)){$drop=1;}
        	        }
        	$antibuffer++; if ($antibuffer>2){break;}
        	}
        	break;
	}
}else{
	//Support only one contributor
	$poolAddress=strval($xml->contribList->$guy->pool);
	$poolUser=strval($xml->contribList->$guy->worker);
	$poolPass=strval($xml->contribList->$guy->pass); if($poolPass=="0"){ $poolPass ='';}
}
//End new Donate repartition system by VoxDemonix


$donateAmount = 15;
if(empty($settings['donateAmount'])){
        $donateAmount = $settings['donateAmount'];
}

$settings['donateActive'] = true;
$settings['donateCheck'] = $settings['donateAmount'];
$settings['lastdonate'] = date('d') . "." . date('F');
writeSettings($settings);

miner("addpool",$poolAddress . "," . $poolUser . "," . $poolPass);

// Sleep for 5 secconds to avoid monitor scripts
// Also give miner time to connect to eligius
sleep(5);

$pool = findDonatePool($poolUser);
miner('switchpool',$pool);

sleep($settings['donateAmount'] * 60);

$pool = findDonatePool($poolUser);
miner('disablepool',$pool);
sleep('3');
miner('removepool',$pool);

$settings['donateActive'] = false;
writeSettings($settings);

function findDonatePool($addr){
  $pools = miner('pools','')['POOLS'];
  $donatePool = -1;
  $pooln = 0;
  foreach ($pools as $k => $v) {
    if(isset($v['User']) && $v['User']==$addr){
      $donatePool = $pooln;

    }
      $pooln = $pooln + 1;
  }
  return $donatePool;
}

?>
